{
  "version": 1.1,
  "atDirectives": [
    {
      "name": "@tailwind",
      "description": "Use the @tailwind directive to insert Tailwind's base, components, utilities and variants styles into your CSS.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://tailwindcss.com/docs/functions-and-directives#tailwind"
        }
      ],
      "status": "standard"
    },
    {
      "name": "@layer",
      "description": "Use the @layer directive to tell Tailwind which “bucket” a set of custom styles belong to. Valid layers are base, components, and utilities.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://tailwindcss.com/docs/functions-and-directives#layer"
        }
      ],
      "status": "standard"
    },
    {
      "name": "@apply",
      "description": "Use @apply to inline any existing utility classes into your own custom CSS.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://tailwindcss.com/docs/functions-and-directives#apply"
        }
      ],
      "status": "standard"
    },
    {
      "name": "@config",
      "description": "Use the @config directive to specify which config file Tailwind should use when compiling that CSS file.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://tailwindcss.com/docs/functions-and-directives#config"
        }
      ],
      "status": "standard"
    },
    {
      "name": "@variants",
      "description": "Generate responsive, hover, focus, active and other variants of your own utilities by wrapping their definitions in the @variants directive.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://v2.tailwindcss.com/docs/functions-and-directives#variants"
        }
      ],
      "status": "obsolete",
      "relevance": 10
    },
    {
      "name": "@responsive",
      "description": "You can generate responsive variants of your own classes by wrapping their definitions in the @responsive directive.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://v2.tailwindcss.com/docs/functions-and-directives#responsive"
        }
      ],
      "status": "obsolete",
      "relevance": 10
    },
    {
      "name": "@screen",
      "description": "The @screen directive allows you to create media queries that reference your breakpoints by name instead of duplicating their values in your own CSS.",
      "references": [
        {
          "name": "Tailwind Documentation",
          "url": "https://v2.tailwindcss.com/docs/functions-and-directives#screen"
        }
      ],
      "status": "obsolete",
      "relevance": 10
    }
  ]
}
